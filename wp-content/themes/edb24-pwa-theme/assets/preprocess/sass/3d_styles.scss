:root {
    --scenePerspective: 1;
    --scenePerspectiveOriginX: 50;
    --scenePerspectiveOriginY: 30;
    --itemZ: 2; // Gap between each cards
    --cameraSpeed: 150; // Where 1 is the fastest, this var is a multiplying factor of --scenePerspective and --filmZ
    --cameraZ: 0; // Initial camera position
    --viewportHeight: 0; // Viewport height will allow us to set the depth of our scene
  }

  
.viewport {
    height: calc(var(--viewportHeight) * 1px);
}

.scene_3d_container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    perspective: calc(var(--scenePerspective) * var(--cameraSpeed) * 1px);
    perspective-origin: calc(var(--scenePerspectiveOriginX) * 1%) calc(var(--scenePerspectiveOriginY) * 1%);
      will-change: perspective-origin;  //Allows Hardware-Accelerated CSS, so transitions are smoother
      transform: translate3d(0,0,0);
}

.main-header {
    position: fixed;
    z-index: 100;
    width: 90vw;
}

.job_list_page {
    perspective: 400px;
    position: absolute;
    top: 0;
    height: 100vh;
    width: 100%;
    transform-style: preserve-3d;
    transform: translateZ(calc(var(--cameraZ) * 1px));
    will-change: transform;
}
.job_list_page .jobs {
    transform-style: preserve-3d;
    position: absolute;
    width: 100%;
    top: 40%;
    border-radius: 10px;
    padding: 15px;
    color: #222222;
}

.jobs:nth-child(2n) {
    left: 0;
}

.jobs:nth-child(2n + 1) {
    right: 0;
}

@for $i from 0 through 25 {
    .jobs:nth-child(#{$i}) {
      transform: translate3D(
        random(50) - 25 * 1%,
        random(100) - 50 * 1%,
        calc(var(--itemZ) * var(--cameraSpeed) * #{$i} * -1px)
      );
    }
  }

.job_list_page .jobs:nth-child(1) {
    background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);
}
.job_list_page .jobs:nth-child(2) {
    background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
}

@media only screen and (min-width: 600px) {
    .job_list_page .jobs {
    width: 45%;
  }
}